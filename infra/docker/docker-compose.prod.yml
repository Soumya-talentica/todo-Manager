version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: todo-manager-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: tododb
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo -d tododb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - todo-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  backend:
    image: ${BACKEND_IMAGE:-todo-manager-backend:latest}
    container_name: todo-manager-backend
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_USER: todo
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: tododb
      DB_PORT: 5432
      PORT: 5000
      NODE_ENV: production
      GITHUB_OWNER: ${GITHUB_OWNER}
      GITHUB_REPO: ${GITHUB_REPO}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_SECURE: ${SMTP_SECURE}
      ALERT_FROM: ${ALERT_FROM}
      ALERT_TO: ${ALERT_TO}
      POLL_ENABLED: ${POLL_ENABLED}
      POLL_INTERVAL_MS: ${POLL_INTERVAL_MS}
      POLL_PER_PAGE: ${POLL_PER_PAGE}
      LOOKBACK_DAYS: ${LOOKBACK_DAYS}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - todo-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  frontend:
    image: ${FRONTEND_IMAGE:-todo-manager-frontend:latest}
    container_name: todo-manager-frontend
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - todo-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  nginx:
    image: nginx:alpine
    container_name: todo-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates if needed
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - todo-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

volumes:
  db_data:
    driver: local

networks:
  todo-network:
    driver: bridge
