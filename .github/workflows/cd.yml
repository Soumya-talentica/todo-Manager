name: CD

on:
  push:
    branches: [main]
    # Only run on merge commits (not every push)
    types: [merged]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/todo-manager-frontend:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/todo-manager-backend:latest

      - name: Prepare SSH key
        run: |
          echo "$DEPLOY_KEY" | base64 -d > deploy_key
          chmod 600 deploy_key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy to server via SSH
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST '
            cd ~/todo-Manager && \
            docker-compose pull && \
            docker-compose up -d && \
            docker system prune -f
          '

      - name: Notify MS Teams
        if: always()
        uses: skitionek/notify-microsoft-teams@v1.2.5
        with:
          webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK }}
          status: ${{ job.status }}
          message: 'CD for ${{ github.repository }}: ${{ job.status }}'
