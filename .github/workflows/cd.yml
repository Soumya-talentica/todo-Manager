name: CD

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          echo "$DEPLOY_KEY" | base64 -d > deploy_key
          chmod 600 deploy_key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

      - name: Sync compose and app files
        run: |
          rsync -avr -e "ssh -i deploy_key -o StrictHostKeyChecking=no" \
            --exclude ".git" --exclude "node_modules" --exclude "frontend/node_modules" --exclude "backend/node_modules" \
            ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:~/todo-Manager/

      - name: Deploy via docker-compose on remote
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST '
            cd ~/todo-Manager && \
            docker-compose pull || true && \
            docker-compose down && \
            docker-compose up -d --build && \
            docker system prune -f || true
          '

      - name: Verify services
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST '
            echo "Checking services..." && \
            docker-compose ps && \
            curl -sf http://localhost:5000/health && \
            curl -sf http://localhost:3000 >/dev/null
          '

      - name: Notify MS Teams (success/failure)
        if: always()
        uses: skitionek/notify-microsoft-teams@v1.0.9
        with:
          webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
