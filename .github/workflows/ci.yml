name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend lint
        working-directory: frontend
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json > /dev/null; then npm run lint; else echo "No lint script"; fi

      - name: Run frontend tests
        working-directory: frontend
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json > /dev/null; then npm test -- --watchAll=false; else echo "No test script"; fi

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Run backend lint
        working-directory: backend
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json > /dev/null; then npm run lint; else echo "No lint script"; fi

      - name: Run backend tests
        working-directory: backend
        run: |
          if [ -f package.json ] && jq -e '.scripts.test' package.json > /dev/null; then npm test -- --watchAll=false; else echo "No test script"; fi

      - name: Docker Compose build
        run: docker-compose build

      - name: Notify MS Teams
        if: always()
        uses: skitionek/notify-microsoft-teams@v1.2.6
        with:
          webhook_url: ${{ secrets.MS_TEAMS_WEBHOOK }}
          status: ${{ job.status }}
          message: 'CI for ${{ github.repository }} on ${{ github.ref }}: ${{ job.status }}'
